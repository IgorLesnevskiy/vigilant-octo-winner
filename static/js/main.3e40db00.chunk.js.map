{"version":3,"sources":["components/Page/Page.jsx","layouts/MainLayout/MainLayout.jsx","components/Floor/Floor.jsx","tools/api/_api.js","tools/api/users.js","tools/api/cities.js","tools/normalizers/_usersNormalizer.js","tools/normalizers/_citiesNormalizer.js","store/slices/users.js","store/slices/cities.js","components/UI/Select/Select.jsx","components/UI/TextInput/TextInput.jsx","components/UI/Checkbox/Checkbox.jsx","components/UI/Button/Button.jsx","components/UI/Form/Form.jsx","tools/utils.js","components/Personal/SettingsForm/SettingsForm.jsx","components/UI/Form/localizations/ru.js","components/Personal/UserInfo/UserInfo.jsx","components/Personal/Settings/Settings.jsx","containers/Personal/Settings.jsx","pages/IndexPage/IndexPage.jsx","components/Application/Application.jsx","store/slices/index.js","index.js"],"names":["Page","props","className","children","MainLayout","Floor","offsetTop","offsetBottom","fluid","extraClasses","cn","data-offset-top","data-offset-bottom","APIBuilder","baseURL","this","_base","params","encodeURI","String","URLSearchParams","object","Object","prototype","toString","call","url","searchParams","headers","requestUrl","_buildAbsoluteUrl","fetch","relativeUrl","URL","normalizeUrl","constructor","isObject","keys","length","search","generateSearchParamsString","process","id","get","then","response","json","users","user","find","u","data","catch","e","Error","console","log","Promise","resolve","cities","city","userEntity","schema","Entity","processStrategy","value","parent","key","attr","attributes","meta","touched","active","name","status","email","cityID","city_id","avatar","imageID","alt","title","personalAgreement","agreements","personal","createdBy","created","createdTime","time","modifiedBy","modified","modifiedTime","normalizeUser","originalData","normalize","normalizeUsersList","cityEntity","population","normalizeCity","normalizeCitiesList","getUserById","createAsyncThunk","userId","a","rejectWithValue","usersAPI","condition","getState","fetchStatus","extra","requests","usersSlice","createSlice","initialState","entities","ids","reducers","extraReducers","pending","state","action","arg","fulfilled","payload","normalizedUser","usersNormalizer","includes","push","rejected","error","actions","getCityById","cityId","citiesAPI","getCitiesList","citiesSlice","normalizedCity","citiesNormalizer","normalizedCitiesList","deepmerge","result","arrayMerge","destinationArray","sourceArray","options","Set","concat","Select","onChange","Function","useState","showOptionsList","setVisibilityOfOptionsList","useEffect","document","addEventListener","handleDocumentClick","removeEventListener","selectedOptionName","useMemo","Array","isArray","option","label","getOptionNameByValue","handleOptionClick","useCallback","newValue","handleSelectClick","target","closest","nativeOptionsMarkup","map","customOptionsMarkup","isSelected","onClick","icon","readOnly","TextInput","type","required","placeholder","errors","handleChange","Checkbox","checked","Button","disabled","handleClick","FormFieldWrapper","displayLabel","help","ThemedForm","withTheme","widgets","BaseInput","rawErrors","slice","CheckboxWidget","SelectWidget","enumOptions","ButtonWidget","inputType","FieldTemplate","ArrayFieldTemplate","items","element","Fragment","ObjectFieldTemplate","properties","field","content","customFormats","v","test","showErrorList","noHtml5Validate","liveValidate","Form","uiSchema","defaultFormData","transformErrors","validate","onSubmit","onBlur","onError","onFocus","formData","setFormData","handleSubmit","handleBlur","handleError","handleFocus","convertDate","date","formatString","originalFormatString","locale","formattedDate","dayjs","Number","isValid","format","extend","customParseFormat","DEFAULT_SECTION_DATA_1","enum","enumNames","ui","DEFAULT_SECTION_DATA_2","password","repeatPassword","DEFAULT_SECTION_DATA_3","saveButton","SettingsForm","lastModified","availableCities","outMessage","ref","n","limit","depsCount","deps","property","cond","comparison","failingKeyword","multipleOf","pattern","missingPattern","propertyName","caseIndex","j","i","message","localize_ru","sectionData1","cloneDeep","sectionData2","sectionData3","values","formattedLastModifiedDate","convertedDate","generateLatModifiedMessage","addError","UserInfo","defaultStatus","onUpdate","statusTextRef","useRef","statusNodeRef","usedCharsAmount","updateUsedCharsAmount","isEditMode","updateEditMode","handleStatusChange","current","sanitizeHtml","handleStatusKeyDown","which","preventDefault","handleChangeStatusTriggerClick","currentMode","focus","oncontextmenu","onpaste","oncut","href","html","innerRef","onKeyDown","Settings","getUserInfo","loading","userStatus","setUserStatus","setDefaultFormData","handleFormSubmit","preparedFormData","section","castFormData","handleStatusUpdate","statusBoxParams","connect","ownProps","filteredCitiesSelector","loadingStatusSelector","errorStatusSelector","dispatch","getCitiesRequestStatus","undefined","getUserRequestStatus","createSelector","filteredCities","entries","filter","filterCityByPopulation","getCityName","fromEntries","citiesStatus","IndexPage","library","add","fas","IndexPageWithLayout","Application","path","combineReducers","citiesReducer","usersReducer","store","configureStore","reducer","rootReducer","devTools","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e40db00.chunk.js","sourcesContent":["function Page(props) {\n    return (\n        <>\n            <div className={\"page\"}>\n                <div className={\"page__inner\"}>{props.children}</div>\n            </div>\n        </>\n    );\n}\n\nexport default Page;\n","import Page from \"../../components/Page\";\n\nimport \"./MainLayout.scss\";\n\nfunction MainLayout(props) {\n    return (\n        <>\n            <Page>{props.children}</Page>\n        </>\n    );\n}\n\nexport default MainLayout;\n","import React from \"react\";\nimport cn from \"classnames\";\n\nimport \"./Floor.scss\";\n\nconst Floor = (props) => {\n    const { offsetTop = \"small\", offsetBottom = \"small\", fluid = false, extraClasses = [], children } = props;\n\n    return (\n        <div\n            className={cn(\"floor\", extraClasses)}\n            data-offset-top={offsetTop}\n            data-offset-bottom={offsetBottom}\n            {...(fluid && { \"data-container-fluid\": true })}>\n            <div className=\"floor__inner\">{children}</div>\n        </div>\n    );\n};\n\nexport default Floor;\n","import normalizeUrl from \"normalize-url\";\n\nexport default class APIBuilder {\n    static generateSearchParamsString(params = {}) {\n        return encodeURI(String(new URLSearchParams(params)));\n    }\n\n    static isObject(object) {\n        return Object.prototype.toString.call(object) === \"[object Object]\";\n    }\n\n    constructor({ baseURL = \"\" }) {\n        this._base = baseURL;\n    }\n\n    get(url = \"\", searchParams = {}, headers = {}) {\n        const requestUrl = this._buildAbsoluteUrl(url, searchParams);\n\n        return fetch(requestUrl, {\n            headers,\n        });\n    }\n\n    _buildAbsoluteUrl(relativeUrl = \"\", searchParams = {}) {\n        const url = new URL(normalizeUrl(`${this._base}${relativeUrl}`));\n\n        if (this.constructor.isObject(searchParams) && Object.keys(searchParams).length) {\n            url.search = this.constructor.generateSearchParamsString(searchParams);\n        }\n\n        return String(url);\n    }\n}\n","import APIBuilder from \"./_api\";\n\nconst API_URL = process.env.REACT_APP_GATEWAY;\n\nclass UsersApi extends APIBuilder {\n    constructor() {\n        super({\n            baseURL: API_URL,\n        });\n    }\n\n    getUserById(id) {\n        return this.get(\"/data/users.json\")\n            .then((response) => {\n                return response.json();\n            })\n            .then((users) => {\n                const user = users.find((u) => u.id === id);\n\n                return { data: user ?? null };\n            })\n            .catch((e) => {\n                throw new Error(e);\n            });\n    }\n\n    updateUserById(id, data = {}) {\n        console.log(id, data);\n\n        return Promise.resolve();\n    }\n\n    getUsersList() {\n        return this.get(\"/data/users.json\")\n            .then((response) => {\n                return response.json();\n            })\n            .then((users) => {\n                return { data: users ?? null };\n            })\n            .catch((e) => {\n                throw new Error(e);\n            });\n    }\n}\n\nexport default new UsersApi();\n","import APIBuilder from \"./_api\";\n\nconst API_URL = process.env.REACT_APP_GATEWAY;\n\nclass CitiesApi extends APIBuilder {\n    constructor() {\n        super({\n            baseURL: API_URL,\n        });\n    }\n\n    getCityById(id) {\n        return this.get(\"/data/cities.json\")\n            .then((response) => {\n                return response.json();\n            })\n            .then((cities) => {\n                const city = cities.find((u) => u.id === id);\n\n                return { data: city ?? null };\n            })\n            .catch((e) => {\n                throw new Error(e);\n            });\n    }\n\n    getCitiesList() {\n        return this.get(\"/data/cities.json\")\n            .then((response) => {\n                return response.json();\n            })\n            .then((cities) => {\n                return { data: cities ?? null };\n            })\n            .catch((e) => {\n                throw new Error(e);\n            });\n    }\n}\n\nexport default new CitiesApi();\n","import { normalize, schema } from \"normalizr\";\n\nconst userEntity = new schema.Entity(\n    \"user\",\n    {},\n    {\n        processStrategy(value, parent, key) {\n            const { id, attributes: attr } = value;\n            const meta = attr.touched;\n\n            return {\n                id,\n\n                active: attr.active,\n                name: attr.name,\n                status: attr.status,\n                email: attr.email,\n                cityID: attr.city_id,\n\n                avatar: {\n                    imageID: attr.avatar,\n                    alt: attr.name,\n                    title: attr.name,\n                },\n\n                personalAgreement: !!attr.agreements.personal,\n\n                createdBy: meta?.created?.id ?? null,\n                createdTime: meta?.created?.time ?? null,\n\n                modifiedBy: meta?.modified?.id ?? null,\n                modifiedTime: meta?.modified?.time ?? null,\n            };\n        },\n    }\n);\n\nexport function normalizeUser(originalData) {\n    return normalize(originalData, userEntity);\n}\nexport function normalizeUsersList(originalData) {\n    return normalize(originalData, [userEntity]);\n}\n","import { normalize, schema } from \"normalizr\";\n\nexport const cityEntity = new schema.Entity(\n    \"cities\",\n    {},\n    {\n        processStrategy(value, parent, key) {\n            const { id, attributes: attr } = value;\n            const meta = attr.touched;\n\n            return {\n                id,\n\n                name: attr.name,\n                population: attr.population,\n\n                createdBy: meta?.created?.id ?? null,\n                createdTime: meta?.created?.time ?? null,\n\n                modifiedBy: meta?.modified?.id ?? null,\n                modifiedTime: meta?.modified?.time ?? null,\n            };\n        },\n    }\n);\n\nexport function normalizeCity(originalData) {\n    return normalize(originalData, cityEntity);\n}\nexport function normalizeCitiesList(originalData) {\n    return normalize(originalData, [cityEntity]);\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport { usersAPI } from \"../../tools/api\";\nimport { usersNormalizer } from \"../../tools/normalizers\";\n\nconst INITIAL_STATE = {\n    entities: {},\n    ids: [],\n    requests: {},\n};\n\nconst getUserById = createAsyncThunk(\n    \"users/getUserById\",\n    async (userId, { rejectWithValue }) => {\n        try {\n            const response = await usersAPI.getUserById(userId);\n\n            return response.data;\n        } catch (err) {\n            rejectWithValue(err.response.data);\n        }\n    },\n    {\n        condition: (userId, { getState, extra }) => {\n            const { users } = getState();\n            const fetchStatus = users.requests[userId];\n\n            if (fetchStatus === \"fulfilled\" || fetchStatus === \"loading\") {\n                // Already fetched or in progress, don't need to re-fetch\n                return false;\n            }\n        },\n    }\n);\n\nconst usersSlice = createSlice({\n    name: \"users\",\n    initialState: INITIAL_STATE,\n    reducers: {},\n    extraReducers: {\n        [getUserById.pending]: (state, action) => {\n            const userId = action.meta.arg;\n\n            state.requests[userId] = \"pending\";\n        },\n        [getUserById.fulfilled]: (state, action) => {\n            const userId = action.meta.arg;\n\n            if (!action.payload) {\n                state.requests[userId] = \"rejected\";\n\n                return;\n            }\n\n            const normalizedUser = usersNormalizer.normalizeUser(action.payload);\n\n            if (!normalizedUser?.entities?.user) {\n                return;\n            }\n\n            state.requests[userId] = \"fulfilled\";\n\n            if (!state.ids.includes(userId)) {\n                state.ids.push(userId);\n            }\n\n            state.entities = {\n                ...state.entities,\n                ...(normalizedUser?.entities?.user ?? {}),\n            };\n        },\n        [getUserById.rejected]: (state, { error, meta }) => {\n            const userId = meta.arg;\n\n            state.requests[userId] = \"rejected\";\n        },\n    },\n});\n\nexport const {} = usersSlice.actions;\n\nexport { getUserById };\n\nexport default usersSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport deepmerge from \"deepmerge\";\n\nimport { citiesAPI } from \"../../tools/api\";\nimport { citiesNormalizer } from \"../../tools/normalizers\";\n\nconst INITIAL_STATE = {\n    entities: {},\n    ids: [],\n    requests: {},\n};\n\nconst getCityById = createAsyncThunk(\n    \"cities/getCityById\",\n    async (cityId, { rejectWithValue }) => {\n        try {\n            const response = await citiesAPI.getCityById(cityId);\n\n            return response.data;\n        } catch (err) {\n            rejectWithValue(err.response.data);\n        }\n    },\n    {\n        condition: (cityId, { getState, extra }) => {\n            const { cities } = getState();\n            const fetchStatus = cities.requests[cityId];\n\n            if (fetchStatus === \"fulfilled\" || fetchStatus === \"loading\") {\n                // Already fetched or in progress, don't need to re-fetch\n                return false;\n            }\n        },\n    }\n);\n\nconst getCitiesList = createAsyncThunk(\n    \"cities/getCitiesList\",\n    async (arg, { rejectWithValue }) => {\n        try {\n            const response = await citiesAPI.getCitiesList();\n\n            return response.data;\n        } catch (err) {\n            rejectWithValue(err.response.data);\n        }\n    },\n    {\n        condition: (arg, { getState, extra }) => {\n            const { cities } = getState();\n            const fetchStatus = cities.requests[\"list\"];\n\n            if (fetchStatus === \"fulfilled\" || fetchStatus === \"loading\") {\n                // Already fetched or in progress, don't need to re-fetch\n                return false;\n            }\n        },\n    }\n);\n\nconst citiesSlice = createSlice({\n    name: \"cities\",\n    initialState: INITIAL_STATE,\n    reducers: {},\n    extraReducers: {\n        [getCityById.pending]: (state, action) => {\n            const cityId = action.meta.arg;\n\n            state.requests[cityId] = \"pending\";\n        },\n        [getCityById.fulfilled]: (state, action) => {\n            const cityId = action.meta.arg;\n\n            if (!action.payload) {\n                state.requests[cityId] = \"rejected\";\n\n                return;\n            }\n\n            const normalizedCity = citiesNormalizer.normalizeCity(action.payload);\n\n            if (!normalizedCity?.entities?.cities) {\n                return;\n            }\n\n            state.requests[cityId] = \"fulfilled\";\n\n            if (!state.ids.includes(cityId)) {\n                state.ids.push(cityId);\n            }\n\n            state.entities = {\n                ...state.entities,\n                ...(normalizedCity?.entities?.cities ?? {}),\n            };\n        },\n        [getCityById.rejected]: (state, { error, meta }) => {\n            const cityId = meta.arg;\n\n            state.requests[cityId] = \"rejected\";\n        },\n\n        [getCitiesList.pending]: (state, action) => {\n            state.requests[\"list\"] = \"pending\";\n        },\n        [getCitiesList.fulfilled]: (state, action) => {\n            if (!action.payload) {\n                state.requests[\"list\"] = \"rejected\";\n\n                return;\n            }\n\n            const normalizedCitiesList = citiesNormalizer.normalizeCitiesList(action.payload);\n\n            if (!normalizedCitiesList?.entities?.cities) {\n                return;\n            }\n\n            state.requests[\"list\"] = \"fulfilled\";\n\n            state.ids = deepmerge(state.ids, normalizedCitiesList.result, {\n                arrayMerge: (destinationArray, sourceArray, options) => [\n                    ...new Set(destinationArray.concat(sourceArray)),\n                ],\n            });\n\n            state.entities = deepmerge(state.entities, normalizedCitiesList?.entities?.cities ?? {});\n        },\n        [getCitiesList.rejected]: (state, { error, meta }) => {\n            state.requests[\"list\"] = \"rejected\";\n        },\n    },\n});\n\nexport const {} = citiesSlice.actions;\n\nexport { getCityById, getCitiesList };\n\nexport default citiesSlice.reducer;\n","import { useCallback, useState, useMemo, useEffect, useRef } from \"react\";\nimport cn from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"./Select.scss\";\n\nconst Select = (props) => {\n    const { name = \"foo\", options = [], value, onChange = Function.prototype } = props;\n\n    const [showOptionsList, setVisibilityOfOptionsList] = useState(false);\n\n    useEffect(() => {\n        if (showOptionsList) {\n            document.addEventListener(\"click\", handleDocumentClick);\n        }\n\n        return () => {\n            document.removeEventListener(\"click\", handleDocumentClick);\n        };\n    }, [showOptionsList]);\n\n    const selectedOptionName = useMemo(() => getOptionNameByValue(value, options), [value, options]);\n\n    const handleOptionClick = useCallback(\n        (newValue, e) => {\n            setVisibilityOfOptionsList(false);\n\n            onChange(newValue);\n        },\n        [value, onChange]\n    );\n\n    const handleSelectClick = useCallback(\n        (e) => {\n            setVisibilityOfOptionsList(!showOptionsList);\n        },\n        [showOptionsList]\n    );\n\n    const handleDocumentClick = useCallback(({ target }) => {\n        if (!target.closest(\".select__list\")) {\n            setVisibilityOfOptionsList(false);\n        }\n    }, []);\n\n    if (!options.length) {\n        return null;\n    }\n\n    const nativeOptionsMarkup = options.map((option) => {\n        return (\n            <option value={option.value} key={option.value}>\n                {option.label}\n            </option>\n        );\n    });\n\n    const customOptionsMarkup = options.map((option) => {\n        const isSelected = value === option.value;\n\n        return (\n            <li\n                className={cn(\"select__list-item\", isSelected && \"is-selected\")}\n                key={option.value}\n                onClick={(e) => handleOptionClick(option.value, e)}>\n                {option.label}\n            </li>\n        );\n    });\n\n    return (\n        <div className={\"select\"}>\n            <div className={cn(\"select__input\", !value && \"is-empty\")} onClick={handleSelectClick}>\n                <div className={\"select__input-value\"}>{value ? selectedOptionName : \"Выберите значение\"}</div>\n\n                <div className={\"select__input-arrow\"}>\n                    <FontAwesomeIcon icon={[\"fas\", showOptionsList ? \"chevron-up\" : \"chevron-down\"]} />\n                </div>\n            </div>\n\n            {showOptionsList && <ul className={\"select__list\"}>{customOptionsMarkup}</ul>}\n\n            <div className={\"select__native\"}>\n                <select name={name} value={value} readOnly>\n                    {nativeOptionsMarkup}\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default Select;\n\nfunction getOptionNameByValue(value = \"\", options = []) {\n    if (!Array.isArray(options)) {\n        return null;\n    }\n\n    return (\n        options.find((option) => {\n            return option.value === value;\n        })?.label ?? null\n    );\n}\n","import React, { useCallback } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./TextInput.scss\";\n\nfunction TextInput(props) {\n    const {\n        type = null,\n        value,\n        required = false,\n        placeholder = null,\n        onChange = Function.prototype,\n        errors = [],\n    } = props;\n\n    const handleChange = useCallback(\n        (e) => {\n            onChange(e.target.value);\n        },\n        [onChange]\n    );\n\n    return (\n        <div className={cn(\"text-input\", !!errors.length && \"is-error\")}>\n            <input\n                className={\"text-input__input\"}\n                type={type}\n                value={value}\n                required={required}\n                placeholder={placeholder}\n                onChange={handleChange}\n            />\n\n            {!!errors.length && (\n                <ul className={\"text-input__errors-list\"}>\n                    {errors.map((error) => {\n                        return (\n                            <li className={\"text-input__error\"} key={error}>\n                                {error}\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </div>\n    );\n}\n\nexport default TextInput;\n","import React, { useCallback } from \"react\";\n\nimport \"./Checkbox.scss\";\nimport cn from \"classnames\";\n\nfunction Checkbox(props) {\n    const { value, required = false, label, errors = [], onChange = Function.prototype } = props;\n\n    const handleChange = useCallback(\n        (e) => {\n            onChange(e.target.checked);\n        },\n        [onChange]\n    );\n\n    return (\n        <label className={cn(\"checkbox-input\", !!errors.length && \"is-error\")}>\n            <span className={\"checkbox-input__input\"}>\n                <input type={\"checkbox\"} checked={value} onChange={handleChange} required={required} />\n                <span className={\"checkbox-input__control\"} />\n            </span>\n            <span className={\"checkbox-input__label\"}>{label}</span>\n\n            {!!errors.length && (\n                <ul className={\"checkbox-input__errors-list\"}>\n                    {errors.map((error) => {\n                        return (\n                            <li className={\"checkbox-input__error\"} key={error}>\n                                {error}\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </label>\n    );\n}\n\nexport default Checkbox;\n","import React, { useCallback } from \"react\";\n\nimport \"./Button.scss\";\n\nfunction Button(props) {\n    const { type, title, disabled, onClick = Function.prototype } = props;\n\n    const handleClick = useCallback(\n        (e) => {\n            onClick(e.target.value);\n        },\n        [onClick]\n    );\n\n    return (\n        <button className={\"button\"} type={type} disabled={disabled} onClick={handleClick}>\n            {title}\n        </button>\n    );\n}\n\nexport default Button;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { withTheme } from \"@rjsf/core\";\n\nimport cn from \"classnames\";\n\nimport \"./Form.scss\";\n\nimport Select from \"../Select\";\nimport TextInput from \"../TextInput\";\nimport Checkbox from \"../Checkbox\";\nimport Button from \"../Button\";\n\nfunction CheckboxWidget(props) {\n    const { value, label, rawErrors = [], onChange } = props;\n\n    const handleChange = useCallback(\n        (value) => {\n            onChange(value);\n        },\n        [onChange]\n    );\n\n    return (\n        <FormFieldWrapper {...props}>\n            <Checkbox value={value} label={label} onChange={handleChange} errors={rawErrors?.slice(0, 1) ?? []} />\n        </FormFieldWrapper>\n    );\n}\n\nfunction SelectWidget(props) {\n    const { options, value, onChange } = props;\n\n    return (\n        <FormFieldWrapper {...props}>\n            <Select options={options.enumOptions} value={value} onChange={onChange} />\n        </FormFieldWrapper>\n    );\n}\n\nfunction ButtonWidget(props) {\n    const { options, disabled = false } = props;\n\n    return (\n        <FormFieldWrapper {...props}>\n            <Button\n                type={options?.inputType ?? \"submit\"}\n                title={options?.title}\n                disabled={disabled}\n                onClick={options?.onClick}\n            />\n        </FormFieldWrapper>\n    );\n}\n\nfunction InputWidget(props) {\n    const { value, required, placeholder, type = \"text\", rawErrors = [], onChange } = props;\n\n    const handleChange = useCallback(\n        (value) => {\n            onChange(value);\n        },\n        [onChange]\n    );\n\n    return (\n        <FormFieldWrapper {...props}>\n            <TextInput\n                type={type}\n                value={value}\n                required={required}\n                placeholder={placeholder}\n                onChange={handleChange}\n                errors={rawErrors?.slice(0, 1) ?? []}\n            />\n        </FormFieldWrapper>\n    );\n}\n\nfunction FormFieldWrapper(props) {\n    const { label, required, options } = props;\n    const displayLabel = label && options?.label !== false;\n\n    return (\n        <div className={\"form-field\"}>\n            <div className={\"form-field__title\"}>{displayLabel && (required ? `${label}*` : label)}</div>\n            <div className={cn(\"form-field__input\", options?.fluid && \"form-field__input--fluid\")}>\n                {props.children}\n            </div>\n            {options?.help && <div className={\"form-field__description\"}>{options.help}</div>}\n        </div>\n    );\n}\n\nconst ThemedForm = withTheme({\n    widgets: {\n        BaseInput: InputWidget,\n        CheckboxWidget: CheckboxWidget,\n        SelectWidget: SelectWidget,\n        ButtonWidget: ButtonWidget,\n    },\n\n    FieldTemplate: function (props) {\n        return props.children;\n    },\n\n    ArrayFieldTemplate: function (props) {\n        return props.items.map((element) => {\n            return <React.Fragment key={element.key}>{element.children}</React.Fragment>;\n        });\n    },\n\n    ObjectFieldTemplate: function (props) {\n        return (\n            <div className={\"form__section\"}>\n                {props.properties.map((field) => {\n                    return (\n                        <div className={\"form__section-item\"} key={field.name}>\n                            {field.content}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    },\n\n    customFormats: {\n        email: (v) => {\n            return (\n                !v.length ||\n                /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/.test(\n                    v\n                )\n            );\n        },\n    },\n\n    showErrorList: false,\n    noHtml5Validate: false,\n    liveValidate: true,\n});\n\nfunction Form(props) {\n    const {\n        schema = {},\n        uiSchema = {},\n        defaultFormData = null,\n        showErrorList = false,\n        noHtml5Validate = false,\n        liveValidate = true,\n        transformErrors = null,\n        validate = null,\n        onChange = Function.prototype,\n        onSubmit = Function.prototype,\n        onBlur = Function.prototype,\n        onError = Function.prototype,\n        onFocus = Function.prototype,\n    } = props;\n\n    const [formData, setFormData] = useState(defaultFormData);\n\n    useEffect(() => {\n        setFormData(defaultFormData);\n    }, defaultFormData);\n\n    const handleChange = useCallback(\n        (params) => {\n            setFormData(params.formData);\n\n            onChange(params);\n        },\n        [onChange]\n    );\n\n    const handleSubmit = useCallback(\n        (params) => {\n            onSubmit(params);\n        },\n        [onSubmit]\n    );\n    const handleBlur = useCallback(\n        (params) => {\n            onBlur(params);\n        },\n        [onBlur]\n    );\n    const handleError = useCallback(\n        (params) => {\n            onError(params);\n        },\n        [onError]\n    );\n    const handleFocus = useCallback(\n        (params) => {\n            onFocus(params);\n        },\n        [onFocus]\n    );\n\n    return (\n        <ThemedForm\n            className={\"form\"}\n            schema={schema}\n            uiSchema={uiSchema}\n            formData={formData}\n            showErrorList={showErrorList}\n            noHtml5Validate={noHtml5Validate}\n            liveValidate={liveValidate}\n            validate={validate}\n            transformErrors={transformErrors}\n            onChange={handleChange}\n            onSubmit={handleSubmit}\n            onBlur={handleBlur}\n            onError={handleError}\n            onFocus={handleFocus}>\n            <React.Fragment />\n        </ThemedForm>\n    );\n}\n\nexport default Form;\n","import dayjs from \"dayjs\";\n\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport \"dayjs/locale/ru\";\n\ndayjs.extend(customParseFormat);\n\n/**\n * Конвертор даты\n * @param {Object} params - объект параметров\n * @param {String} params.date - дата для конвертации\n * @param {String} params.formatString - формат для конвертации\n * @param {String} params.originalFormatString - оригинальный формат, в котором представлена дата\n * @param {String} params.locale - локаль\n *\n * @example\n *      convertDate({\n *\t\t\tdate: '12.05.18',\n *\t\t\tformatString: 'DD MMM YYYY, dd',\n *\t\t\tlocale: 'ru'\n *\t\t}); // 12 мая 2018, сб\n *\n * @returns {string}\n */\nfunction convertDate(params) {\n    const { date, formatString = \"YYYY-MM-DDHH:mmZ\", originalFormatString, locale = \"ru\" } = params;\n    const formattedDate = dayjs(Number(date), originalFormatString, locale).locale(locale);\n\n    return formattedDate.isValid() ? formattedDate.format(formatString) : \"\";\n}\n\nexport { convertDate };\n","import React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nimport \"./SettingsForm.scss\";\nimport Form from \"../../UI/Form/Form\";\n\nimport localize_ru from \"../../UI/Form/localizations/ru\";\nimport { convertDate } from \"../../../tools/utils\";\n\nfunction generateLatModifiedMessage(date = null) {\n    if (!date) {\n        return \"\";\n    }\n\n    const convertedDate = convertDate({\n        date: date,\n        formatString: \"DD MMMM YYYY в HH:MM:ss\",\n    });\n\n    return convertedDate ? `последние изменения ${convertedDate}` : \"\";\n}\n\nconst DEFAULT_SECTION_DATA_1 = {\n    schema: {\n        type: \"object\",\n        properties: {\n            city: {\n                title: \"Ваш город\",\n                type: \"string\",\n                enum: [],\n                enumNames: [],\n            },\n        },\n    },\n    ui: {\n        city: {},\n    },\n    formData: { city: \"\" },\n};\n\nconst DEFAULT_SECTION_DATA_2 = {\n    schema: {\n        type: \"object\",\n        required: [\"password\", \"repeatPassword\"],\n\n        properties: {\n            password: {\n                title: \"Пароль\",\n\n                type: \"string\",\n            },\n            repeatPassword: {\n                title: \"Пароль еще раз\",\n\n                type: \"string\",\n            },\n        },\n    },\n    ui: {\n        password: {\n            \"ui:widget\": \"password\",\n            \"ui:placeholder\": \"Пароль\",\n            \"ui:help\": \"Ваш новый пароль должен содержать не менее 5 символов\",\n        },\n        repeatPassword: {\n            \"ui:widget\": \"password\",\n            \"ui:placeholder\": \"Пароль еще раз\",\n            \"ui:help\": \"Повторите пароль, пожалуйста, это обезопасит вас с нами на случай ошибки.\",\n        },\n    },\n    formData: {\n        password: \"\",\n        repeatPassword: \"\",\n    },\n};\n\nconst DEFAULT_SECTION_DATA_3 = {\n    schema: {\n        type: \"object\",\n        required: [\"email\"],\n        properties: {\n            email: {\n                title: \"Электронная почта\",\n\n                type: \"string\",\n                format: \"email\",\n            },\n            personalAgreement: {\n                title: \"принимать актуальную информацию на емейл\",\n                type: \"boolean\",\n            },\n            saveButton: {\n                type: \"string\",\n            },\n        },\n    },\n    ui: {\n        email: {\n            \"ui:placeholder\": \"e-mail\",\n            \"ui:help\": \"Можно изменить адрес, указанный при регистрации.\",\n        },\n        personalAgreement: {\n            \"ui:options\": {\n                fluid: true,\n                label: false,\n            },\n        },\n        saveButton: {\n            \"ui:widget\": \"ButtonWidget\",\n            \"ui:title\": \"Изменить\",\n            \"ui:help\": \"\",\n            \"ui:options\": {\n                label: false,\n                fluid: true,\n                inputType: \"submit\",\n            },\n        },\n    },\n    formData: {\n        email: \"\",\n        personalAgreement: false,\n    },\n};\n\nfunction SettingsForm(props) {\n    const {\n        lastModified = null,\n        availableCities = {},\n        defaultFormData = {},\n\n        onSubmit = Function.prototype,\n        onChange = Function.prototype,\n    } = props;\n\n    const handleSubmit = useCallback((data) => {\n        onSubmit(data.formData);\n    });\n\n    const handleChange = useCallback((formData) => {\n        onChange(formData);\n    });\n\n    const transformErrors = useCallback((errors) => {\n        localize_ru(errors);\n\n        return errors;\n    });\n\n    const schema = useMemo(() => {\n        const sectionData1 = cloneDeep(DEFAULT_SECTION_DATA_1).schema;\n        const sectionData2 = cloneDeep(DEFAULT_SECTION_DATA_2).schema;\n        const sectionData3 = cloneDeep(DEFAULT_SECTION_DATA_3).schema;\n\n        sectionData1.properties.city.enum = Object.keys(availableCities) ?? [];\n        sectionData1.properties.city.enumNames = Object.values(availableCities) ?? [];\n\n        return {\n            type: \"array\",\n\n            items: [sectionData1, sectionData2, sectionData3],\n        };\n    }, [availableCities]);\n\n    const uiSchema = useMemo(() => {\n        const sectionData1 = cloneDeep(DEFAULT_SECTION_DATA_1).ui;\n        const sectionData2 = cloneDeep(DEFAULT_SECTION_DATA_2).ui;\n        const sectionData3 = cloneDeep(DEFAULT_SECTION_DATA_3).ui;\n\n        const formattedLastModifiedDate = generateLatModifiedMessage(lastModified);\n\n        sectionData3.saveButton[\"ui:help\"] = formattedLastModifiedDate\n            ? `последние изменения ${formattedLastModifiedDate}`\n            : null;\n\n        return {\n            items: [sectionData1, sectionData2, sectionData3],\n        };\n    }, [lastModified]);\n\n    const formData = useMemo(() => {\n        const sectionData1 = cloneDeep(DEFAULT_SECTION_DATA_1).formData;\n        const sectionData2 = cloneDeep(DEFAULT_SECTION_DATA_2).formData;\n        const sectionData3 = cloneDeep(DEFAULT_SECTION_DATA_3).formData;\n\n        sectionData1.city = defaultFormData.city;\n\n        sectionData3.email = defaultFormData.email;\n        sectionData3.personalAgreement = !!defaultFormData.personalAgreement;\n\n        return [sectionData1, sectionData2, sectionData3];\n    }, [defaultFormData]);\n\n    const validate = useCallback((formData, errors) => {\n        const password = formData[1]?.password ?? null;\n        const repeatPassword = formData[1]?.repeatPassword ?? null;\n\n        if (password.length && password !== repeatPassword) {\n            errors[1].repeatPassword.addError(\"Пароли не совпадают\");\n        }\n\n        return errors;\n    });\n\n    return (\n        <Form\n            schema={schema}\n            uiSchema={uiSchema}\n            defaultFormData={formData}\n            transformErrors={transformErrors}\n            validate={validate}\n            onChange={handleChange}\n            onSubmit={handleSubmit}\n        />\n    );\n}\n\nexport default SettingsForm;\n","export default function localize_ru(errors) {\n    if (!(errors && errors.length)) return;\n\n    for (let error of errors) {\n        let outMessage = \"\";\n\n        switch (error.name) {\n            case \"$ref\": {\n                outMessage = \"не найдена схема \" + error.params.ref;\n\n                break;\n            }\n            case \"additionalItems\": {\n                const n = error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно иметь не более, чем \" + n + \" элемент\";\n\n                if (n >= 2 && n <= 4) {\n                    outMessage += \"а\";\n                } else if (n !== 1) {\n                    outMessage += \"ов\";\n                }\n\n                break;\n            }\n            case \"additionalProperties\": {\n                outMessage = \"не должно иметь дополнительные поля\";\n\n                break;\n            }\n            case \"anyOf\": {\n                outMessage = 'должно соответствовать одной их схем в \"anyOf\"';\n\n                break;\n            }\n            case \"const\": {\n                outMessage = \"должно быть равно заданному значению\";\n\n                break;\n            }\n            case \"contains\": {\n                outMessage = \"должно содержать значение соответствующее схеме\";\n\n                break;\n            }\n            case \"custom\": {\n                outMessage = 'должно соответствовать правилу \"' + error.name + '\"';\n\n                break;\n            }\n            case \"dependencies\": {\n                const n = error.params.depsCount;\n\n                outMessage = \"\";\n                outMessage += \"должно иметь пол\";\n\n                if (n === 1) {\n                    outMessage += \"е\";\n                } else {\n                    outMessage += \"я\";\n                }\n\n                outMessage += \" \" + error.params.deps + \", когда присутствует поле \" + error.params.property;\n\n                break;\n            }\n            case \"enum\": {\n                outMessage = 'должно быть равен одному из значений в \"enum\"';\n\n                break;\n            }\n            case \"exclusiveMaximum\": {\n                const cond = error.params.comparison + \" \" + error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно быть \" + cond;\n\n                break;\n            }\n            case \"exclusiveMinimum\": {\n                const cond = error.params.comparison + \" \" + error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно быть \" + cond;\n\n                break;\n            }\n            case \"false schema\": {\n                outMessage = \"схема равна false\";\n\n                break;\n            }\n            case \"format\": {\n                if (error.params.format === \"email\") {\n                    outMessage = \"введите валидный email\";\n\n                    break;\n                }\n\n                outMessage = 'должно соответствовать формату \"' + error.params.format + '\"';\n\n                break;\n            }\n            case \"formatExclusiveMaximum\": {\n                outMessage = \"formatExclusiveMaximum должно быть boolean\";\n\n                break;\n            }\n            case \"formatExclusiveMinimum\": {\n                outMessage = \"formatExclusiveMinimum должно быть boolean\";\n\n                break;\n            }\n            case \"formatMaximum\": {\n                const cond = error.params.comparison + \" \" + error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно быть \" + cond;\n\n                break;\n            }\n            case \"formatMinimum\": {\n                const cond = error.params.comparison + \" \" + error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно быть \" + cond;\n\n                break;\n            }\n            case \"if\": {\n                outMessage = 'должно соответствовать схемe \"' + error.params.failingKeyword + '\"';\n\n                break;\n            }\n            case \"maximum\": {\n                const cond = error.params.comparison + \" \" + error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно быть \" + cond;\n\n                break;\n            }\n            case \"maxItems\": {\n                const n = error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно иметь не более, чем \" + n + \" элемент\";\n\n                if (n >= 2 && n <= 4) {\n                    outMessage += \"а\";\n                } else if (n !== 1) {\n                    outMessage += \"ов\";\n                }\n\n                break;\n            }\n            case \"maxLength\": {\n                const n = error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно быть не длиннее, чем \" + n + \" символ\";\n\n                if (n >= 2 && n <= 4) {\n                    outMessage += \"а\";\n                } else if (n !== 1) {\n                    outMessage += \"ов\";\n                }\n\n                break;\n            }\n            case \"maxProperties\": {\n                const n = error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно иметь не более, чем \" + n + \" пол\";\n\n                if (n === 1) {\n                    outMessage += \"е\";\n                } else if (n >= 2 && n <= 4) {\n                    outMessage += \"я\";\n                } else {\n                    outMessage += \"ей\";\n                }\n\n                break;\n            }\n            case \"minimum\": {\n                const cond = error.params.comparison + \" \" + error.params.limit;\n                outMessage = \"\";\n                outMessage += \"должно быть \" + cond;\n\n                break;\n            }\n            case \"minItems\": {\n                const n = error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно иметь не менее, чем \" + n + \" элемент\";\n\n                if (n >= 2 && n <= 4) {\n                    outMessage += \"а\";\n                } else if (n !== 1) {\n                    outMessage += \"ов\";\n                }\n\n                break;\n            }\n            case \"minLength\": {\n                const n = error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно быть не короче, чем \" + n + \" символ\";\n\n                if (n >= 2 && n <= 4) {\n                    outMessage += \"а\";\n                } else if (n !== 1) {\n                    outMessage += \"ов\";\n                }\n\n                break;\n            }\n            case \"minProperties\": {\n                const n = error.params.limit;\n\n                outMessage = \"\";\n                outMessage += \"должно иметь не менее, чем \" + n + \" пол\";\n\n                if (n === 1) {\n                    outMessage += \"е\";\n                } else if (n >= 2 && n <= 4) {\n                    outMessage += \"я\";\n                } else {\n                    outMessage += \"ей\";\n                }\n\n                break;\n            }\n            case \"multipleOf\": {\n                outMessage = \"должно быть кратным \" + error.params.multipleOf;\n\n                break;\n            }\n            case \"not\": {\n                outMessage = 'должно не соответствовать схеме в \"not\"';\n\n                break;\n            }\n            case \"oneOf\": {\n                outMessage = 'должно соответствовать в точности одной схемe в \"oneOf\"';\n\n                break;\n            }\n            case \"pattern\": {\n                outMessage = 'должно соответствовать образцу \"' + error.params.pattern + '\"';\n\n                break;\n            }\n            case \"patternRequired\": {\n                outMessage = 'должно иметь поле, соответствующее образцу \"' + error.params.missingPattern + '\"';\n\n                break;\n            }\n            case \"propertyNames\": {\n                outMessage = \"имя поля '\" + error.params.propertyName + \"' не соответствует схеме\";\n\n                break;\n            }\n            case \"required\": {\n                outMessage = \"поле обязательно для заполнения\";\n\n                break;\n            }\n            case \"switch\": {\n                outMessage = \"должно соответствовать правилу \" + error.params.caseIndex + ' в \"switch\"';\n\n                break;\n            }\n            case \"type\": {\n                outMessage = \"должно быть \" + error.params.type;\n\n                break;\n            }\n            case \"uniqueItems\": {\n                outMessage =\n                    \"не должно иметь повторяющихся элементов (элементы \" +\n                    error.params.j +\n                    \" и \" +\n                    error.params.i +\n                    \" идентичны)\";\n\n                break;\n            }\n            default:\n        }\n\n        error.message = outMessage;\n    }\n}\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport sanitizeHtml from \"sanitize-html\";\n\nimport \"./UserInfo.scss\";\n\nconst STATUS_MAX_LENGTH = 150;\n\nfunction UserInfo(props) {\n    const { name = \"\", defaultStatus = \"\", onUpdate = Function.prototype } = props;\n\n    const statusTextRef = useRef(defaultStatus);\n    const statusNodeRef = useRef(null);\n\n    const [usedCharsAmount, updateUsedCharsAmount] = useState(0);\n    const [isEditMode, updateEditMode] = useState(false);\n\n    const handleStatusChange = useCallback((e) => {\n        statusTextRef.current = e.target.value;\n\n        updateUsedCharsAmount(sanitizeHtml(statusTextRef.current).length);\n    }, []);\n\n    const handleStatusKeyDown = useCallback((e) => {\n        if (e.which && (e.which === 8 || e.which === 37 || e.which === 39)) {\n            return true;\n        }\n\n        const currentInputLength = sanitizeHtml(statusTextRef.current).length;\n\n        if (currentInputLength >= STATUS_MAX_LENGTH) {\n            e.preventDefault();\n        }\n    }, []);\n\n    const handleDocumentClick = useCallback((e) => {\n        if (\n            !e.target.closest(\".personal-user-info__status-input\") &&\n            !e.target.closest(\".personal-user-info__action\")\n        ) {\n            updateEditMode(false);\n        }\n    }, []);\n\n    const handleChangeStatusTriggerClick = useCallback(() => {\n        updateEditMode((currentMode) => !currentMode);\n    }, []);\n\n    useEffect(() => {\n        if (isEditMode) {\n            statusNodeRef.current.focus();\n\n            return;\n        }\n\n        onUpdate(statusTextRef.current);\n    }, [isEditMode]);\n\n    useEffect(() => {\n        updateUsedCharsAmount(defaultStatus.length);\n\n        statusNodeRef.current.oncontextmenu = () => false;\n        statusNodeRef.current.onpaste = () => false;\n        statusNodeRef.current.oncut = () => false;\n\n        document.addEventListener(\"click\", handleDocumentClick);\n\n        return () => {\n            document.removeEventListener(\"click\", handleDocumentClick);\n        };\n    }, []);\n\n    return (\n        <div className={\"personal-user-info\"}>\n            <div className={\"personal-user-info__greetings\"}>Здравствуйте,</div>\n\n            <div className={\"personal-user-info__info-wrapper\"}>\n                <div className={\"personal-user-info__info\"}>\n                    <div className={\"personal-user-info__name\"}>{name}</div>\n                    <a\n                        href=\"#\"\n                        className={\"personal-user-info__action link link--action\"}\n                        onClick={handleChangeStatusTriggerClick}>\n                        {isEditMode ? \"Сохранить\" : \"Сменить статус\"}\n                    </a>\n                </div>\n\n                <div className={\"personal-user-info__status-box\"}>\n                    <ContentEditable\n                        className={\"personal-user-info__status-input\"}\n                        html={statusTextRef.current}\n                        innerRef={statusNodeRef}\n                        disabled={!isEditMode}\n                        placeholder={\"Введите статус...\"}\n                        onChange={handleStatusChange}\n                        onKeyDown={handleStatusKeyDown}\n                    />\n                </div>\n                {isEditMode && (\n                    <div className={\"personal-user-info__note\"}>\n                        Количество символом: {usedCharsAmount} / {STATUS_MAX_LENGTH}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default UserInfo;\n","import { useEffect, useState, useCallback } from \"react\";\n\nimport \"./Settings.scss\";\n\nimport SettingsForm from \"../SettingsForm\";\nimport UserInfo from \"../UserInfo\";\n\nfunction Settings(props) {\n    const {\n        user = {},\n        cities = {},\n        getCitiesList = Function.prototype,\n        getUserInfo = Function.prototype,\n        error = false,\n        loading = true,\n    } = props;\n\n    const [userStatus, setUserStatus] = useState(user.status);\n\n    const [defaultFormData, setDefaultFormData] = useState({\n        city: \"\",\n        password: \"\",\n        repeatPassword: \"\",\n        email: \"\",\n        personalAgreement: false,\n    });\n\n    useEffect(() => {\n        getCitiesList();\n        getUserInfo();\n    }, [getCitiesList, getUserInfo]);\n\n    useEffect(() => {\n        setDefaultFormData({\n            city: user.cityID,\n            password: \"\",\n            repeatPassword: \"\",\n            email: user.email,\n            personalAgreement: !!user.personalAgreement,\n        });\n    }, [user]);\n\n    const handleFormSubmit = useCallback(\n        (data) => {\n            const preparedFormData = castFormData(data);\n\n            console.log({\n                ...preparedFormData,\n                status: userStatus,\n            });\n        },\n        [userStatus]\n    );\n\n    const handleStatusUpdate = useCallback((status = \"\") => {\n        setUserStatus(status);\n    }, []);\n\n    const statusBoxParams = {\n        name: user.name,\n        defaultStatus: user.status,\n\n        onUpdate: handleStatusUpdate,\n    };\n\n    const formParams = {\n        lastModified: user.modifiedTime,\n        availableCities: cities,\n        data: {\n            city: user.cityID,\n            password: \"\",\n            repeatPassword: \"\",\n            email: user.email,\n            personalAgreement: !!user.personalAgreement,\n        },\n\n        onSubmit: handleFormSubmit,\n    };\n\n    if (error) {\n        return <div>error</div>;\n    }\n\n    if (loading) {\n        return <div>loading...</div>;\n    }\n\n    return (\n        <div className={\"personal-settings\"}>\n            <div className={\"personal-settings__user\"}>\n                <UserInfo {...statusBoxParams} />\n            </div>\n            <div className={\"personal-settings__params\"}>\n                <SettingsForm\n                    defaultFormData={defaultFormData}\n                    lastModified={user.modifiedTime}\n                    availableCities={cities}\n                    onSubmit={handleFormSubmit}\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction castFormData(data) {\n    let result = {};\n\n    for (let section of data) {\n        result = {\n            ...result,\n            ...section,\n        };\n    }\n\n    return result;\n}\n\nexport default Settings;\n","import { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport { getUserById } from \"../../store/slices/users\";\nimport { getCitiesList } from \"../../store/slices/cities\";\n\nimport Settings from \"../../components/Personal/Settings\";\n\nconst mapStateToProps = function (state, ownProps) {\n    return {\n        user: state.users.entities[ownProps.userId],\n        cities: filteredCitiesSelector(state),\n\n        loading: loadingStatusSelector(state, ownProps),\n        error: errorStatusSelector(state, ownProps),\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        getCitiesList: () => dispatch(getCitiesList()),\n        getUserInfo: () => dispatch(getUserById(ownProps.userId)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n\nconst getCities = (state) => state.cities.entities;\n\nconst getCitiesRequestStatus = (state) => state.cities.requests[\"list\"] || undefined;\nconst getUserRequestStatus = (state, props = {}) => {\n    return state.users.requests[props?.userId] || undefined;\n};\n\nconst filteredCitiesSelector = createSelector(getCities, function (cities = {}) {\n    const filteredCities = Object.entries(cities).filter(filterCityByPopulation).map(getCityName);\n\n    return Object.fromEntries(filteredCities);\n\n    //*****\n    function filterCityByPopulation([id, data]) {\n        return data.population >= 5000;\n    }\n\n    function getCityName([id, data]) {\n        return [id, data.name];\n    }\n});\n\nconst loadingStatusSelector = createSelector(getCitiesRequestStatus, getUserRequestStatus, function (\n    citiesStatus,\n    userStatus\n) {\n    if (!citiesStatus) {\n        return true;\n    }\n\n    if (!userStatus) {\n        return true;\n    }\n\n    return citiesStatus === \"pending\" || userStatus === \"pending\";\n});\n\nconst errorStatusSelector = createSelector(getCitiesRequestStatus, getUserRequestStatus, function (\n    citiesStatus,\n    userStatus\n) {\n    return citiesStatus === \"rejected\" || userStatus === \"rejected\";\n});\n","import React from \"react\";\n\nimport Floor from \"../../components/Floor\";\nimport PersonalSettingsContainer from \"../../containers/Personal/Settings\";\n\nconst IndexPage = () => {\n    return (\n        <React.Fragment>\n            <Floor>\n                <PersonalSettingsContainer userId={\"mockUserId\"} />\n            </Floor>\n        </React.Fragment>\n    );\n};\n\nexport default IndexPage;\n","import { Switch, Route, Link } from \"react-router-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./Application.scss\";\n\n//layouts\nimport MainLayout from \"../../layouts/MainLayout\";\n\n//pages\nimport IndexPage from \"../../pages/IndexPage\";\n\nlibrary.add(fas);\n\nconst IndexPageWithLayout = () => (\n    <MainLayout>\n        <IndexPage />\n    </MainLayout>\n);\n\nfunction Application() {\n    return (\n        <>\n            <Switch>\n                <Route path={\"/\"}>\n                    <IndexPageWithLayout />\n                </Route>\n            </Switch>\n        </>\n    );\n}\n\nexport default Application;\n","import { combineReducers } from \"redux\";\n\nimport usersReducer from \"./users\";\nimport citiesReducer from \"./cities\";\n\nexport default combineReducers({\n    cities: citiesReducer,\n    users: usersReducer,\n});\n","import ReactDOM from \"react-dom\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./index.scss\";\nimport Application from \"./components/Application\";\n\nimport rootReducer from \"./store/slices\";\n\nconst store = configureStore({\n    reducer: rootReducer,\n    devTools: process.env.NODE_ENV !== \"production\",\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Application />\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}